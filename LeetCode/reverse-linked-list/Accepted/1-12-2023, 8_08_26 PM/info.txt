{"id":876951686,"lang":"cpp","lang_name":"C++","time":"6Â months, 1Â week","timestamp":1673546906,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/876951686/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* current = head;\n        ListNode *prev = NULL, *next = NULL;\n \n        while (current != NULL) {\n            // Store next\n            next = current->next;\n            // Reverse current node's pointer\n            current->next = prev;\n            // Move pointers one position ahead.\n            prev = current;\n            current = next;\n        }\n        head = prev;\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false}