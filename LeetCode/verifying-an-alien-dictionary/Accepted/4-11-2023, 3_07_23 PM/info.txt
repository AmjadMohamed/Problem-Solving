{"id":931891570,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1681218443,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/931891570/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"9.9 MB","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        unordered_map<char,int> hashMap;\n        for(int i = 0 ; i < order.size(); i ++)\n        {\n            hashMap[order[i]] = i;\n        }\n\n\n        string str1 , str2;\n        bool can = true, isSame = true;\n        for(int i = 0 ; i < words.size()-1 ; i ++)\n        {\n            str1 = words[i];\n            str2 = words[i+1];\n            isSame = true;\n            for(int z = 0 ; z < min(str1.size() , str2.size()) ; z ++)\n            {\n                //cout << str1[z] << \" \" << str2[z] << endl;\n                if(hashMap[str1[z]] < hashMap[str2[z]])\n                {\n                    isSame = false;\n                    break;\n                }\n                else if(hashMap[str1[z]] > hashMap[str2[z]])\n                {\n                    can = false;\n                    isSame = false;\n                    break;\n                }\n            }\n            if(isSame)\n            {\n                if(str1.size() > str2.size())\n                {\n                    can = false;\n                }\n            }\n        }\n        if(can)\n            return true;\n        else\n            return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false}