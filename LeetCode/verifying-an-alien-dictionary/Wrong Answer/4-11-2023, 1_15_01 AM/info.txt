{"id":931561066,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1681168501,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/931561066/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"N/A","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        unordered_map<char,int> hashMap;\n        for(int i = 0 ; i < order.size(); i ++)\n        {\n            hashMap[order[i]] = i;\n        }\n\n\n        string str1 , str2;\n        for(int i = 0 ; i < words.size()-1 ; i ++)\n        {\n            str1 = words[i];\n            str2 = words[i+1];\n            for(int i = 0 ; i < min(str1.size() , str2.size()) ; i ++)\n            {\n                if(hashMap[str1[i]] < hashMap[str2[i]])\n                {\n                    return true;\n                }\n                else if(hashMap[str1[i]] > hashMap[str2[i]])\n                {\n                    return false;\n                }\n            }\n        }\n        return false;\n    }\n};","compare_result":"11111111011111111111111111111011001000101001001011001100110100010011010011110001110111001010110101010111100001101011111111011","title_slug":"verifying-an-alien-dictionary","has_notes":false}