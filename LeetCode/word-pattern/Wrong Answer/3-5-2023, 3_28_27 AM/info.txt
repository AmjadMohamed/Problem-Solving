{"id":909201605,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1677979707,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/909201605/","is_pending":"Not Pending","title":"Word Pattern","memory":"N/A","code":"class Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        unordered_map<char,string> hashMap;\n        set<char> patSet;\n        set<string> wordsSet;\n        stringstream ss(s);\n        vector<string> words;\n        string word;\n        while (getline(ss, word, ' '))\n        {\n            words.push_back(word);\n        }\n\n        for(int i = 0 ; i < pattern.size(); i ++)\n        {\n            patSet.insert(pattern[i]);\n            wordsSet.insert(words[i]);\n        }\n\n        if(patSet.size() != wordsSet.size())\n        {\n            return false;\n        }\n\n        for(int i = 0 ; i < pattern.size(); i ++)\n        {\n            hashMap[pattern[i]] = words[i];\n        }\n\n        for(int i = 0 ; i < pattern.size(); i ++)\n        {\n            if(hashMap[pattern[i]] != words[i])\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"11111111111111110111111111100000000000000","title_slug":"word-pattern","has_notes":false}