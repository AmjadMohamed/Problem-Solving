{"id":874710701,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1673266826,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/874710701/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> order;\n        stack<TreeNode*> stk;\n\n        stk.push(root);\n        TreeNode* tmp;\n        while(!stk.empty())\n        {\n            tmp = stk.top();\n            stk.pop();\n            if(tmp != NULL)\n            {\n                order.push_back(tmp -> val);\n                stk.push(tmp -> right);\n                stk.push(tmp -> left);\n            }\n            \n        }\n        return order;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false}