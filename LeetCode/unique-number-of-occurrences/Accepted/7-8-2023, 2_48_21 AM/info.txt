{"id":988931027,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1688773701,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/988931027/","is_pending":"Not Pending","title":"Unique Number of Occurrences","memory":"8 MB","code":"class Solution {\npublic:\n    bool uniqueOccurrences(vector<int>& arr) {\n        int counterArray[2000] = {0};\n        sort(arr.begin() , arr.end());\n        int cnt = 0 ;\n        for(int i = 0 ; i < arr.size()-1 ; i ++)\n        {\n            if(arr[i] != arr[i+1])\n            {\n                counterArray[cnt+1]++;\n                cnt = 0;\n            }\n            else\n            {\n                cnt ++;\n            }\n        }\n\n        // checking last element\n        if(arr.size() == 1 || arr[arr.size()-1] != arr[arr.size()-2])\n        {\n            counterArray[1]++;\n        }\n\n        for(int i = 0 ; i < 2000 ; i ++)\n        {\n            if(counterArray[i] > 1)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-number-of-occurrences","has_notes":false}