{"id":907029372,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1677663061,"status":10,"status_display":"Accepted","runtime":"482 ms","url":"/submissions/detail/907029372/","is_pending":"Not Pending","title":"Sort an Array","memory":"133.6 MB","code":"class Solution {\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        // using merge sort\n        mergeSort(nums , 0 , nums.size()-1);\n        return nums;\n    }\n\n    void mergeSort(vector<int>& nums, int start, int end) {\n        if (start >= end) {\n            return;\n        }\n        int mid = start + (end - start) / 2;\n        mergeSort(nums, start, mid);\n        mergeSort(nums, mid + 1, end);\n        merge(nums, start, mid, end);\n    }\n\n    void merge(vector<int>& nums, int start, int mid, int end) {\n        vector<int> temp(end - start + 1);\n        int i = start, j = mid + 1, k = 0;\n\n        while (i <= mid && j <= end) {\n            if (nums[i] < nums[j]) {\n                temp[k++] = nums[i++];\n            } else {\n                temp[k++] = nums[j++];\n            }\n        }\n\n        while (i <= mid) {\n            temp[k++] = nums[i++];\n        }\n\n        while (j <= end) {\n            temp[k++] = nums[j++];\n        }\n\n        for (int i = start; i <= end; i++) {\n            nums[i] = temp[i - start];\n        }\n    }\n};","compare_result":"1111111111111111111","title_slug":"sort-an-array","has_notes":false}